// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using auth.Data;

#nullable disable

namespace NextCore.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20250113073008_CreateUsersTable")]
    partial class CreateUsersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("auth.Models.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("accessToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("expiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("provider")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("providerAccountId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("refreshToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("scope")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tokenType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("auth.Models.Session", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("expires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("sessionToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("auth.Models.User", b =>
                {
                    b.Property<string>("userId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("imageKtpPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("userPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userId");

                    b.HasIndex("userEmail")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("auth.Models.Account", b =>
                {
                    b.HasOne("auth.Models.User", "user")
                        .WithMany("accounts")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("auth.Models.Session", b =>
                {
                    b.HasOne("auth.Models.User", "user")
                        .WithMany("sessions")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("auth.Models.User", b =>
                {
                    b.Navigation("accounts");

                    b.Navigation("sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
